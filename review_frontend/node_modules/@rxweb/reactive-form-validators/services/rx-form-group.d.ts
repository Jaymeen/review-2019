import { FormGroup, AbstractControl, AsyncValidatorFn } from "@angular/forms";
export declare class RxFormGroup extends FormGroup {
    private model;
    private entityObject;
    private baseObject;
    private entityService;
    private formDataProvider;
    constructor(model: any, entityObject: {
        [key: string]: any;
    }, controls: {
        [key: string]: AbstractControl;
    }, validatorOrOpts?: any, asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null);
    isDirty(): boolean;
    resetForm(): void;
    patchModelValue(value: {
        [key: string]: any;
    }, options?: {
        onlySelf?: boolean;
        emitEvent?: boolean;
    }): void;
    getErrorSummary(onlyMessage: boolean): {
        [key: string]: any;
    };
    valueChangedSync(): void;
    refreshDisable(): void;
    bindErrorMessages(): void;
    readonly modelInstanceValue: any;
    readonly modelInstance: {
        [key: string]: any;
    };
    readonly controlsError: {
        [key: string]: any;
    };
    toFormData(): FormData;
}
